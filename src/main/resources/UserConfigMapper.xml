<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quotawish.leaveword.mapper.UserConfigMapper">
  <resultMap id="BaseResultMap" type="com.quotawish.leaveword.model.entity.UserConfig">
    <!--@mbg.generated-->
    <!--@Table user_config-->
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="config_json" jdbcType="VARCHAR" property="configJson" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    user_id, config_json, update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update user_config
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="config_json = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=BIGINT} then #{item.configJson,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where user_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.userId,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update user_config
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="config_json = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.configJson != null">
            when user_id = #{item.userId,jdbcType=BIGINT} then #{item.configJson,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when user_id = #{item.userId,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where user_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.userId,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into user_config
    (user_id, config_json, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId,jdbcType=BIGINT}, #{item.configJson,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <delete id="deleteByPrimaryKeyIn">
    <!--@mbg.generated-->
    delete from user_config where user_id in 
    <foreach close=")" collection="list" item="userId" open="(" separator=", ">
      #{userId,jdbcType=BIGINT}
    </foreach>
  </delete>
  <insert id="insertOnDuplicateUpdate" parameterType="com.quotawish.leaveword.model.entity.UserConfig">
    <!--@mbg.generated-->
    insert into user_config
    (user_id, config_json, update_time)
    values
    (#{userId,jdbcType=BIGINT}, #{configJson,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
    on duplicate key update 
    user_id = #{userId,jdbcType=BIGINT}, 
    config_json = #{configJson,jdbcType=VARCHAR}, 
    update_time = #{updateTime,jdbcType=TIMESTAMP}
  </insert>
  <insert id="insertOnDuplicateUpdateSelective" parameterType="com.quotawish.leaveword.model.entity.UserConfig">
    <!--@mbg.generated-->
    insert into user_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="configJson != null">
        config_json,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="configJson != null">
        #{configJson,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="configJson != null">
        config_json = #{configJson,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>