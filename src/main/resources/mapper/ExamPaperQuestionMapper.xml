<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quotawish.leaveword.mapper.ExamPaperQuestionMapper">
  <resultMap id="BaseResultMap" type="com.quotawish.leaveword.model.entity.ExamPaperQuestion">
    <!--@mbg.generated-->
    <!--@Table exam_paper_question-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="paper_id" jdbcType="INTEGER" property="paperId" />
    <result column="question_id" jdbcType="INTEGER" property="questionId" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, paper_id, question_id, sort_order, created_at, updated_at
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update exam_paper_question
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="paper_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.paperId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="question_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.questionId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="sort_order = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.sortOrder,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="created_at = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createdAt,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="updated_at = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updatedAt,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update exam_paper_question
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="paper_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.paperId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.paperId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="question_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.questionId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.questionId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="sort_order = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.sortOrder != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.sortOrder,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="created_at = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createdAt != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.createdAt,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="updated_at = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updatedAt != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.updatedAt,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into exam_paper_question
    (paper_id, question_id, sort_order, created_at, updated_at)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.paperId,jdbcType=INTEGER}, #{item.questionId,jdbcType=INTEGER}, #{item.sortOrder,jdbcType=INTEGER}, 
        #{item.createdAt,jdbcType=TIMESTAMP}, #{item.updatedAt,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <delete id="deleteByPrimaryKeyIn">
    <!--@mbg.generated-->
    delete from exam_paper_question where id in 
    <foreach close=")" collection="list" item="id" open="(" separator=", ">
      #{id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <insert id="insertOnDuplicateUpdate" keyColumn="id" keyProperty="id" parameterType="com.quotawish.leaveword.model.entity.ExamPaperQuestion" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into exam_paper_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      paper_id,
      question_id,
      sort_order,
      created_at,
      updated_at,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{paperId,jdbcType=INTEGER},
      #{questionId,jdbcType=INTEGER},
      #{sortOrder,jdbcType=INTEGER},
      #{createdAt,jdbcType=TIMESTAMP},
      #{updatedAt,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      paper_id = #{paperId,jdbcType=INTEGER},
      question_id = #{questionId,jdbcType=INTEGER},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOnDuplicateUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.quotawish.leaveword.model.entity.ExamPaperQuestion" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into exam_paper_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="paperId != null">
        paper_id,
      </if>
      <if test="questionId != null">
        question_id,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="paperId != null">
        #{paperId,jdbcType=INTEGER},
      </if>
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="paperId != null">
        paper_id = #{paperId,jdbcType=INTEGER},
      </if>
      <if test="questionId != null">
        question_id = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>